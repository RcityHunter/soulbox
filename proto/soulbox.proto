syntax = "proto3";

package soulbox.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/struct.proto";

// SoulBox Core Service - Main API for sandbox management
service SoulBoxService {
    // Sandbox Management
    rpc CreateSandbox(CreateSandboxRequest) returns (CreateSandboxResponse);
    rpc GetSandbox(GetSandboxRequest) returns (GetSandboxResponse);
    rpc ListSandboxes(ListSandboxesRequest) returns (ListSandboxesResponse);
    rpc DeleteSandbox(DeleteSandboxRequest) returns (DeleteSandboxResponse);
    
    // Code Execution
    rpc ExecuteCode(ExecuteCodeRequest) returns (ExecuteCodeResponse);
    rpc StreamExecuteCode(ExecuteCodeRequest) returns (stream ExecuteCodeStreamResponse);
    
    // File Operations
    rpc UploadFile(stream UploadFileRequest) returns (UploadFileResponse);
    rpc DownloadFile(DownloadFileRequest) returns (stream DownloadFileResponse);
    rpc ListFiles(ListFilesRequest) returns (ListFilesResponse);
    rpc DeleteFile(DeleteFileRequest) returns (DeleteFileResponse);
    
    // Health Check
    rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse);
}

// Streaming Service - For real-time communication
service StreamingService {
    // Bidirectional streaming for real-time sandbox interaction
    rpc SandboxStream(stream SandboxStreamRequest) returns (stream SandboxStreamResponse);
    
    // Terminal streaming
    rpc TerminalStream(stream TerminalStreamRequest) returns (stream TerminalStreamResponse);
}

// Messages
message CreateSandboxRequest {
    string template_id = 1;
    SandboxConfig config = 2;
    map<string, string> environment_variables = 3;
    google.protobuf.Duration timeout = 4;
}

message CreateSandboxResponse {
    string sandbox_id = 1;
    string status = 2;
    google.protobuf.Timestamp created_at = 3;
    string endpoint_url = 4;
}

message SandboxConfig {
    ResourceLimits resource_limits = 1;
    NetworkConfig network_config = 2;
    repeated string allowed_domains = 3;
    bool enable_internet = 4;
}

message ResourceLimits {
    uint64 memory_mb = 1;
    float cpu_cores = 2;
    uint64 disk_mb = 3;
    uint32 max_processes = 4;
}

message NetworkConfig {
    repeated uint32 exposed_ports = 1;
    bool enable_port_forwarding = 2;
    string subnet = 3;
}

message GetSandboxRequest {
    string sandbox_id = 1;
}

message GetSandboxResponse {
    Sandbox sandbox = 1;
}

message Sandbox {
    string id = 1;
    string template_id = 2;
    string status = 3;
    SandboxConfig config = 4;
    google.protobuf.Timestamp created_at = 5;
    google.protobuf.Timestamp updated_at = 6;
    map<string, string> environment_variables = 7;
    string endpoint_url = 8;
}

message ListSandboxesRequest {
    int32 page = 1;
    int32 page_size = 2;
    string filter = 3;
}

message ListSandboxesResponse {
    repeated Sandbox sandboxes = 1;
    int32 total_count = 2;
    int32 page = 3;
    int32 page_size = 4;
}

message DeleteSandboxRequest {
    string sandbox_id = 1;
}

message DeleteSandboxResponse {
    bool success = 1;
    string message = 2;
}

message ExecuteCodeRequest {
    string sandbox_id = 1;
    string code = 2;
    string language = 3;
    map<string, string> environment_variables = 4;
    google.protobuf.Duration timeout = 5;
    string working_directory = 6;
}

message ExecuteCodeResponse {
    string execution_id = 1;
    string stdout = 2;
    string stderr = 3;
    int32 exit_code = 4;
    google.protobuf.Duration execution_time = 5;
    bool timed_out = 6;
}

message ExecuteCodeStreamResponse {
    oneof response {
        ExecutionStarted started = 1;
        ExecutionOutput output = 2;
        ExecutionCompleted completed = 3;
        ExecutionError error = 4;
    }
}

message ExecutionStarted {
    string execution_id = 1;
    google.protobuf.Timestamp started_at = 2;
}

message ExecutionOutput {
    string execution_id = 1;
    OutputType type = 2;
    string data = 3;
}

message ExecutionCompleted {
    string execution_id = 1;
    int32 exit_code = 2;
    google.protobuf.Duration execution_time = 3;
}

message ExecutionError {
    string execution_id = 1;
    string error_message = 2;
    string error_type = 3;
}

enum OutputType {
    OUTPUT_TYPE_UNSPECIFIED = 0;
    OUTPUT_TYPE_STDOUT = 1;
    OUTPUT_TYPE_STDERR = 2;
}

// File operations
message UploadFileRequest {
    oneof request {
        FileUploadMetadata metadata = 1;
        bytes chunk = 2;
    }
}

message FileUploadMetadata {
    string sandbox_id = 1;
    string file_path = 2;
    uint64 file_size = 3;
    string content_type = 4;
}

message UploadFileResponse {
    bool success = 1;
    string message = 2;
    string file_path = 3;
    uint64 bytes_uploaded = 4;
}

message DownloadFileRequest {
    string sandbox_id = 1;
    string file_path = 2;
}

message DownloadFileResponse {
    oneof response {
        FileDownloadMetadata metadata = 1;
        bytes chunk = 2;
    }
}

message FileDownloadMetadata {
    string file_path = 1;
    uint64 file_size = 2;
    string content_type = 3;
}

message ListFilesRequest {
    string sandbox_id = 1;
    string path = 2;
    bool recursive = 3;
}

message ListFilesResponse {
    repeated FileInfo files = 1;
}

message FileInfo {
    string name = 1;
    string path = 2;
    uint64 size = 3;
    bool is_directory = 4;
    google.protobuf.Timestamp modified_at = 5;
    string permissions = 6;
}

message DeleteFileRequest {
    string sandbox_id = 1;
    string file_path = 2;
}

message DeleteFileResponse {
    bool success = 1;
    string message = 2;
}

// Streaming messages
message SandboxStreamRequest {
    oneof request {
        SandboxStreamInit init = 1;
        SandboxStreamCommand command = 2;
        SandboxStreamData data = 3;
    }
}

message SandboxStreamInit {
    string sandbox_id = 1;
    StreamType stream_type = 2;
}

message SandboxStreamCommand {
    string command_type = 1;
    google.protobuf.Struct parameters = 2;
}

message SandboxStreamData {
    bytes data = 1;
}

message SandboxStreamResponse {
    oneof response {
        SandboxStreamReady ready = 1;
        SandboxStreamOutput output = 2;
        SandboxStreamError error = 3;
    }
}

message SandboxStreamReady {
    string stream_id = 1;
}

message SandboxStreamOutput {
    string stream_id = 1;
    bytes data = 2;
    OutputType output_type = 3;
}

message SandboxStreamError {
    string stream_id = 1;
    string error_message = 2;
}

enum StreamType {
    STREAM_TYPE_UNSPECIFIED = 0;
    STREAM_TYPE_TERMINAL = 1;
    STREAM_TYPE_PROCESS = 2;
    STREAM_TYPE_FILE_WATCHER = 3;
}

// Terminal streaming
message TerminalStreamRequest {
    oneof request {
        TerminalInit init = 1;
        TerminalInput input = 2;
        TerminalResize resize = 3;
    }
}

message TerminalInit {
    string sandbox_id = 1;
    TerminalConfig config = 2;
}

message TerminalConfig {
    uint32 rows = 1;
    uint32 cols = 2;
    string shell = 3;
    string working_directory = 4;
    map<string, string> environment_variables = 5;
}

message TerminalInput {
    string terminal_id = 1;
    bytes data = 2;
}

message TerminalResize {
    string terminal_id = 1;
    uint32 rows = 2;
    uint32 cols = 3;
}

message TerminalStreamResponse {
    oneof response {
        TerminalReady ready = 1;
        TerminalOutput output = 2;
        TerminalClosed closed = 3;
        TerminalError error = 4;
    }
}

message TerminalReady {
    string terminal_id = 1;
}

message TerminalOutput {
    string terminal_id = 1;
    bytes data = 2;
}

message TerminalClosed {
    string terminal_id = 1;
    int32 exit_code = 2;
}

message TerminalError {
    string terminal_id = 1;
    string error_message = 2;
}

// Health check
message HealthCheckRequest {
    string service = 1;
}

message HealthCheckResponse {
    HealthStatus status = 1;
    string message = 2;
    map<string, string> details = 3;
}

enum HealthStatus {
    HEALTH_STATUS_UNSPECIFIED = 0;
    HEALTH_STATUS_SERVING = 1;
    HEALTH_STATUS_NOT_SERVING = 2;
    HEALTH_STATUS_UNKNOWN = 3;
}